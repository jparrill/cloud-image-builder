# Tests for lab 2: http://kubevirt.io/labs/kubernetes/lab2
- name: CDI lab tests
  hosts: launched
  user: centos
  become: True
  gather_facts: True
  tasks:
    # Tests for lab 2 CDI
    - name: Download 01_get_storage_manifest.sh
      get_url:
        url: https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/_includes/scriptlets/lab2/01_get_storage_manifest.sh
        dest: /home/centos/01_get_storage_manifest.sh
        owner: centos
        group: centos

    - name: get storage manifest
      shell: cat /home/centos/01_get_storage_manifest.sh | bash

    - name: Download 02_get_cdi_controller_manifest.sh
      get_url:
        url: https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/_includes/scriptlets/lab2/02_get_cdi_controller_manifest.sh
        dest: /home/centos/02_get_cdi_controller_manifest.sh
        owner: centos
        group: centos

    - name: get cdi controller manifest
      shell: cat /home/centos/02_get_cdi_controller_manifest.sh | bash

    - name: Download 03_create_storage.sh
      get_url:
        url: https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/_includes/scriptlets/lab2/03_create_storage.sh
        dest: /home/centos/03_create_storage.sh
        owner: centos
        group: centos

    - name: Download 04_create_cdi-controller.sh
      get_url:
        url: https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/_includes/scriptlets/lab2/04_create_cdi-controller.sh
        dest: /home/centos/04_create_cdi-controller.sh
        owner: centos
        group: centos

    - name: create hostpath storage class
      shell: cat /home/centos/03_create_storage.sh | bash

    - name: create cdi
      shell: cat /home/centos/04_create_cdi-controller.sh | bash

    - name: Download 05_view_cdi_pod_status.sh
      get_url:
        url: https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/_includes/scriptlets/lab2/05_view_cdi_pod_status.sh
        dest: /home/centos/05_view_cdi_pod_status.sh
        owner: centos
        group: centos

    - name: wait for cdi-deployment pod to become Running
      shell: cat /home/centos/05_view_cdi_pod_status.sh | bash | grep cdi-deployment
      register: cdi_deployment_status
      until: cdi_deployment_status.stdout.find("Running") != -1
      retries: 30
      delay: 10

    - name: Download 06_create_fedora_cloud_instance.sh
      get_url:
        url: https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/_includes/scriptlets/lab2/06_create_fedora_cloud_instance.sh
        dest: /home/centos/06_create_fedora_cloud_instance.sh
        owner: centos
        group: centos

    - name: deploy fedora pvc
      shell: cat /home/centos/06_create_fedora_cloud_instance.sh | bash

    - name: wait for fedora pvc to become Bound
      shell: kubectl get pvc | grep fedora
      register: fedora_pvc_status
      until: fedora_pvc_status.stdout.find("Bound") != -1
      retries: 12
      delay: 5

    - name: wait for importer pod to start running
      shell: kubectl get pods | grep importer-fedora
      register: fedora_importer_status
      until: fedora_importer_status.stdout.find("Running") != -1
      retries: 12
      delay: 5

    - name: wait for importer pod to succeed
      shell: kubectl describe pvc fedora | grep "cdi.kubevirt.io/storage.pod.phase"
      register: fedora_importer_status
      until: fedora_importer_status.stdout.find("Succeeded") != -1
      retries: 24
      delay: 5

    - name: Download 08_get_vm_manifest.sh
      get_url:
        url: https://raw.githubusercontent.com/kubevirt/kubevirt.github.io/master/_includes/scriptlets/lab2/08_get_vm_manifest.sh
        dest: /home/centos/08_get_vm_manifest.sh
        owner: centos
        group: centos

    - name: get manifest
      shell: cat /home/centos/08_get_vm_manifest.sh | cut -d ' ' -f 2
      register: vm_manifest

    - name: create fedora vm
      command: "kubectl create -f {{ vm_manifest.stdout }}"

    - name: wait for fedora vm to be Running
      shell: kubectl describe vmi vm1 | grep Phase
      register: vm1_status
      until: vm1_status.stdout.find("Running") != -1
      retries: 30
      delay: 10

    - name: use virtctl to stop VM
      command: /home/centos/virtctl stop vm1

    - name: delete vm1
      command: "kubectl delete -f {{ vm_manifest.stdout }}"

    - name: wait for fedora vmi to be removed
      shell: kubectl get vmi
      register: vm1_status
      until: vm1_status.stderr.find("No resources") != -1
      retries: 30
      delay: 10

    - name: get pvc manifest
      shell: cat /home/centos/06_create_fedora_cloud_instance.sh | cut -d ' ' -f 4
      register: pvc_manifest

    - name: delete fedora pvc
      command: "kubectl delete -f {{ pvc_manifest.stdout }}"

    - name: wait for fedora pvc to be removed
      shell: kubectl get pvc
      register: pvc_status
      until: pvc_status.stderr.find("No resources") != -1
      retries: 30
      delay: 10

    - name: get cdi manifest
      shell: cat /home/centos/02_get_cdi_controller_manifest.sh | cut -d ' ' -f 2
      register: cdi_manifest

    - name: delete CRD cdiconfigs.cdi.kubevirt.io
      command: kubectl -n cdi delete crd cdiconfigs.cdi.kubevirt.io

    - name: delete CRD datavolumes.cdi.kubevirt.io
      command: kubectl -n cdi delete crd datavolumes.cdi.kubevirt.io

    - name: delete cdi
      command: "kubectl delete --grace-period=10 -f {{ cdi_manifest.stdout }}"

    - name: get storage manifest
      shell: cat /home/centos/01_get_storage_manifest.sh | cut -d ' ' -f 2
      register: storage_manifest

    - name: delete hostpath storage class
      command: "kubectl delete --grace-period=10 -f {{ storage_manifest.stdout }}"
